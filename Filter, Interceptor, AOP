Filter:
Filter는 Servlet 스펙에서 제공하는 기능으로, 모든 서블릿 요청과 응답에 대해 처리하는 역할을 합니다.
Filter는 DispatcherServlet 이전에 요청을 가로채기 때문에, Spring MVC의 DispatcherServlet에 도달하기 전에 수행됩니다.
주로 요청 및 응답의 헤더 수정, 캐싱, 인증, 인코딩 등의 전역적인 작업을 처리하는 데 사용됩니다.

Interceptor:
Interceptor는 Spring MVC에서 제공하는 기능으로, 컨트롤러 실행 전, 후 또는 View 렌더링 전, 후에 처리를 삽입하는 방법을 제공합니다.
Interceptor는 DispatcherServlet 이후에 요청을 가로채기 때문에, 컨트롤러 메서드가 실행된 후에 수행됩니다.
주로 권한 검사, 로깅, 세션 관리 등의 작업을 처리하는 데 사용됩니다.

AOP (Aspect-Oriented Programming):
AOP는 관점 지향 프로그래밍의 약자로, 공통 관심 사항을 분리하여 각 모듈에 집중할 수 있도록 해주는 프로그래밍 패러다임입니다.
AOP는 Filter와 Interceptor와는 달리, 애플리케이션 코드의 여러 지점에서 횡단적으로 적용됩니다.
트랜잭션 관리, 로깅, 보안 등과 같이 여러 모듈에서 공통으로 적용되는 기능을 AOP를 통해 하나의 관점으로 모듈화하여 재사용성과 유지보수성을 높일 수 있습니다.
